- step:
    name: docker-image-dockerhub
    image: valohai/docker-image-builder:latest
    command: 
      - python ./docker_image_builder/writeDockerfile.py {parameter:dockerfile}
      - dockerd &
      - export DOCKERTAG={parameter-value:repository}:{parameter-value:docker-tag}
      - docker build -t $DOCKERTAG -f /valohai/repository/Dockerfile --progress=plain .
      - docker login -u $DHUSERNAME -p $DHPASSWORD
      - set -e
      - docker push $DOCKERTAG && echo "New image pushed." && 
        echo "Use it in your Valohai step by setting the image property in your valohai.yaml to:" &&
        echo "echo docker.io/$DOCKERTAG" || 
        echo "Failed to push the image. Check that you have provided a valid Dockerfile or Dockerfile contents and that the repository exists in your registry."
    icon: docker_hub
    category: Docker build & push image
    inputs:
        - name: dockerfileinput
          optional: true
    parameters:
        - name: docker-tag
          type: string
          description: "Tag of the Docker image (e.g. 0.1 would create username/myimagename:0.1)" 
        - name: repository
          type: string
          description: "Name of your repository (e.g. username/myimagename)"    
        - name: dockerfile
          default: "# Our base image

            FROM python:3.9


            # Replace valohai-utils with the libraries you want to add

            RUN pip install valohai-utils"
          type: string
          optional: true
          description: You can use this parameter to provide the Dockerfile contents instead of giving it as an input.
          widget: dockerfile

- step:
    name: docker-image-gcp
    image: valohai/docker-image-builder:latest
    command: 
      - python ./docker_image_builder/writeDockerfile.py {parameter:dockerfile}
      - dockerd &
      - export DOCKERTAG={parameter-value:docker-tag} 
      - export REPOSITORY={parameter-value:repository}
      - export DOCKERTAG=$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/{parameter-value:repository}:{parameter-value:docker-tag}
      - docker build -t $DOCKERTAG -f /valohai/repository/Dockerfile --progress=plain . 
      - gcloud artifacts repositories create $GCP_NEW_REPOSITORY --location $GCP_REGION --repository-format docker --immutable-tags || echo "Repository creation failed. $GCP_NEW_REPOSITORY already exists or the given value is not a valid repository name."
      - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/{parameter-value:repository}
      - set -e
      - docker push $DOCKERTAG && echo "New image pushed." && 
        echo "Use it in your Valohai step by setting the image property in your valohai.yaml to:" &&
        echo "echo $DOCKERTAG" || 
        echo "Failed to push the image. Check that you have provided a valid Dockerfile or Dockerfile contents, that the repository exists in your registry and that the tag does not already exists."
    icon: artifact_registry
    category: Docker build & push image
    inputs:
        - name: dockerfileinput
          optional: true
    parameters:
        - name: docker-tag
          description: "Tag of the Docker image (e.g. 0.1 would create valohai/myimagename:0.1)"
        - name: repository
          type: string
          description: "Name of your repository (e.g. valohai/myimagename)"  
        - name: dockerfile
          default: "# Our base image

            FROM python:3.9


            # Replace valohai-utils with the libraries you want to add

            RUN pip install valohai-utils"
          type: string
          optional: true
          description: You can use this parameter to provide the Dockerfile contents instead of giving it as an input.
          widget: dockerfile
    environment-variables:
        - name: GCP_PROJECT_ID
          description: ID of your GCP project that hosts of the Artifact Registry
        - name: GCP_REGION
          description: GCP Region for the Artifact Registry. For example, europe-west4 or us-east1
        - name: GCP_NEW_REPOSITORY
          description: Artifact Registry repository names may only contain lowercase letters, numbers, and hyphens, and must begin with a letter and end with a letter or number.

- step:
    name: docker-image-aws
    image: valohai/docker-image-builder:latest
    command: 
      - python ./docker_image_builder/writeDockerfile.py {parameter:dockerfile}
      - dockerd &
      - export REPOSITORY={parameter-value:repository}
      - export DOCKERTAG=$AWS_ECR_ACCOUNT_ID.dkr.ecr.$AWS_ECR_REGION.amazonaws.com/{parameter-value:repository}:{parameter-value:docker-tag}
      - docker build -t $DOCKERTAG -f /valohai/repository/Dockerfile --progress=plain .
      - aws ecr create-repository --repository-name {parameter-value:repository} --image-tag-mutability IMMUTABLE --region $AWS_ECR_REGION || echo "Found existing repository {parameter-value:repository}"
      - aws ecr get-login-password --region $AWS_ECR_REGION | docker login --username AWS --password-stdin $AWS_ECR_ACCOUNT_ID.dkr.ecr.$AWS_ECR_REGION.amazonaws.com
      - set -e
      - docker push $DOCKERTAG && echo "New image pushed." && 
        echo "Use it in your Valohai step by setting the image property in your valohai.yaml to:" &&
        echo "$AWS_ECR_ACCOUNT_ID.dkr.ecr.$AWS_ECR_REGION.amazonaws.com/{parameter-value:repository}:{parameter-value:docker-tag}" || 
        echo "Failed to push the image. Check that you have provided a valid Dockerfile or Dockerfile contents, that the repository exists in your registry and that the tag does not already exists."
    icon: ecr
    category: Docker build & push image
    inputs:
        - name: dockerfileinput
          optional: true
    parameters:
        - name: docker-tag
          type: string
          description: "Tag of the Docker image (e.g. 0.1 would create valohai/myimagename:0.1)" 
        - name: repository
          type: string
          description: "Name of your repository (e.g. valohai/myimagename)"       
        - name: dockerfile
          default: "# Our base image

            FROM python:3.9


            # Replace valohai-utils with the libraries you want to add

            RUN pip install valohai-utils"
          type: string
          optional: true
          description: You can use this parameter to provide the Dockerfile contents instead of giving it as an input.
          widget: dockerfile
    environment-variables:
      - name: AWS_ECR_ACCOUNT_ID
        description: ID of your AWS account that hosts of the Elastic Container Registry
      - name: AWS_ECR_REGION
        description: AWS Region for the Elastic Container Registry. For example, eu-west-1 or us-east-1
